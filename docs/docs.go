// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/heartbeat": {
            "get": {
                "tags": [
                    "Metrics"
                ],
                "summary": "Heartbeat metric",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/v1/group/{groupName}/spieces": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Spieces in group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the group",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "from",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "till",
                        "name": "till",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/group/{groupName}/spieces/top/{N}": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Top N spieces in group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the group",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Top N",
                        "name": "N",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "from",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "till",
                        "name": "till",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/group/{groupName}/temperature/average": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Average temperature in group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the group",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/group/{groupName}/transparency/average": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Average transparency in group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the group",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/region/temperature/max": {
            "get": {
                "tags": [
                    "Sensors"
                ],
                "summary": "Max Temperature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Minimum value for x coordinate",
                        "name": "xMin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Minimum value for y coordinate",
                        "name": "yMin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Minimum value for z coordinate",
                        "name": "zMin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Maximum value for x coordinate",
                        "name": "xMax",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Maximum value for y coordinate",
                        "name": "yMax",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Maximum value for z coordinate",
                        "name": "zMax",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/region/temperature/min": {
            "get": {
                "tags": [
                    "Sensors"
                ],
                "summary": "Min Temperature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Minimum value for x coordinate",
                        "name": "xMin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Minimum value for y coordinate",
                        "name": "yMin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Minimum value for z coordinate",
                        "name": "zMin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Maximum value for x coordinate",
                        "name": "xMax",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Maximum value for y coordinate",
                        "name": "yMax",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Maximum value for z coordinate",
                        "name": "zMax",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/sensor/{groupName}/temperature/average": {
            "get": {
                "tags": [
                    "Sensors"
                ],
                "summary": "Average Temperature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the group",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "from",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "till",
                        "name": "till",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
